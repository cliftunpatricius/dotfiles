#!/bin/sh

#
# Source Libraries
#

# shellcheck source=scripts/_lib.sh
. .scripts/_lib.sh

#
# Platform-specific Configurations
#

# Source paths are hardcoded so that shellcheck can follow them
if test "${ME_OPERATING_SYSTEM}" = "OpenBSD"
then
	# shellcheck source=dotfiles/shellrc.d/openbsd
	. .shellrc.d/openbsd
elif test "${ME_OPERATING_SYSTEM}" = "FreeBSD"
then
	# shellcheck source=dotfiles/shellrc.d/freebsd
	. .shellrc.d/freebsd
elif test "${ME_OPERATING_SYSTEM}" = "Linux"
then
	# shellcheck source=dotfiles/shellrc.d/linux
	. .shellrc.d/linux
elif test "${ME_OPERATING_SYSTEM}" = "Darwin"
then
	# shellcheck source=dotfiles/shellrc.d/darwin
	. .shellrc.d/darwin
fi

#
# Cross-platform Aliases And Subroutines
#

if test "${ME_CONTEXT}" = "work"
then
	# shellcheck disable=SC2142
	alias tailscale_exit_node_up='tailscale set --exit-node="$(tailscale exit-node suggest | awk -F ": " "{print \$2;}")"'
	alias tailscale_exit_node_down='tailscale set --exit-node='
fi

git_sync() {
	if test -n "${1}"
	then
		git_sync__master="${1}"
	else
		git_sync__master="master"
	fi

	git checkout "${git_sync__master}" && git fetch upstream && git merge upstream/"${git_sync__master}" && git push
}

git_rebase() {
	if test -n "${1}"
	then
		git_rebase__master="${1}"
	else
		git_rebase__master="master"
	fi

	git_rebase__current="$(git branch --show-current)"

	git_sync "${git_rebase__master}" && git checkout "${git_rebase__current}" && git rebase "${git_rebase__master}"
}

get_cert_dates() {
	if test -n "${1}"
	then
		get_cert_dates__servername="${1}"
	else
		printf 'Usage: get_cert_dates <openssl s_client -servername> [openssl s_client -connect]\n' >&2
		return 1
	fi

	if test -n "${2}"
	then
		get_cert_dates__connect="${2}"
	else
		get_cert_dates__connect="${get_cert_dates__servername}:443"
	fi

	echo | openssl s_client -servername "${get_cert_dates__servername}" -connect "${get_cert_dates__connect}" 2> /dev/null | openssl x509 -noout -dates
}

